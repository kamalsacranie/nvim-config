global !p

# Custom math context. Dont know how to move to serparate file lol
def math():
    synlist = vim.eval(
        """map(synstack(line('.'), col('.')), 'synIDattr(v:val, "name")')"""
    )
    
    # Catching emply list
    # echo map(synstack(line('.'), col('.')), 'synIDattr(v:val, "name")')
    if not any(synlist):
        return False

    if "texMathTex" in synlist[-1]:
        return False
    elif any("Math" in string for string in synlist):
        return True
    elif "pandocLaTeXRegion" in synlist:
        return True
    else:
        return False
endglobal

# ========================== GENERAL

snippet c' "InlineCode"
\`${1:code}\`${2}
endsnippet

snippet link "Link to something"
[${1:${VISUAL:Text}}](${2:www.url.com}})$0
endsnippet

snippet b' "Boldface"
**${1:bold}**${2}
endsnippet

snippet i' "Italics"
*${1:italic}*${2}
endsnippet

snippet bi' "Bitalics"
***${1:bitalic}***${2}
endsnippet

snippet d' "InlineMath"
\$${1:math}\$${2}
endsnippet

# snippet $$ "MathBlock" b
# \$\$
# ${1:math}
# \$\$${2}
# endsnippet

snippet eqn "LatexBlock" bA
\\begin\{align*\}
${1:LaTeX}
\\end\{align*\}
endsnippet

snippet check "Checkbox" b
- [ ] ${1:code}
endsnippet

snippet h3 "Heading3" b
### ${1:heading}
endsnippet

snippet h4 "Heading3" b
#### ${1:heading}
endsnippet

snippet h5 "Heading3" b
##### ${1:heading}
endsnippet

snippet --- "YAML" b
---
${1}
---
endsnippet

snippet ptrarr "rightarrow" iA
\$\\rightarrow\$
endsnippet

# ========================= MATH

context "math()"
snippet ... "dots" iA
\\dots
endsnippet

context "math()"
snippet frac "fraction" iA
\\dfrac\{${1}\}\{${2}\}${3}
endsnippet

context "math()"
snippet bar "bar" iA
\\overline\{${1}\}${2}
endsnippet

context "math()"
snippet hat "hat" iA
\\hat\{${1}\}${2}
endsnippet

context "math()"
snippet sq "square" iA
^\{2\}${1}
endsnippet

context "math()"
snippet = "equals" iA
 = 
endsnippet

context "math()"
snippet + "plus" iA
 + 
endsnippet

context "math()"
snippet - "minus" iA
 - 
endsnippet

context "math()"
snippet * "times" iA
\\times 
endsnippet

context "math()"
snippet rarr "rightarrow" iA
\\rightarrow 
endsnippet

context "math()"
snippet Rarr "eqrightarrow" iA
\\Rightarrow 
endsnippet

context "math()"
snippet ^ "superscript" iA
^\{${1}\}${2}
endsnippet

context "math()"
snippet _ "subscript" iA
_\{${1}\}${2}
endsnippet

context "math()"
snippet sum "sum" iA
\sum_\{${1}\}^\{${2}\}${3}
endsnippet

context "math()"
snippet max "max" iA
\\underset\{${1:undertext}\}\max $0
endsnippet

context "math()"
snippet min "min" iA
\\underset\{${1:undertext}\}\min $0
endsnippet

context "math()"
snippet root "squareroot" iA
\\sqrt\{${1:underroot}\}$0
endsnippet

context "math()"
snippet left "brakcets" iA
\\left$0\\right$1
endsnippet

context "math()"
snippet text "inmathtext" iA
\text\{ ${1} \}${3}
endsnippet

# Letters
context "math()"
snippet @g "gamma" iA
\gamma
endsnippet

context "math()"
snippet @G "Gamma" iA
\Gamma
endsnippet

context "math()"
snippet @s "sigma" iA
\sigma
endsnippet

context "math()"
snippet @S "Sigma" iA
\Sigma
endsnippet

context "math()"
snippet @t "theta" iA
\theta
endsnippet

context "math()"
snippet @T "Theta" iA
\Theta
endsnippet

context "math()"
snippet @b "beta" iA
\beta
endsnippet

context "math()"
snippet @B "Beta" iA
\Beta
endsnippet

context "math()"
snippet @a "alpha" iA
\alpha
endsnippet

context "math()"
snippet @A "Alpha" iA
\Alpha
endsnippet

context "math()"
snippet @l "lambda" iA
\lambda
endsnippet

context "math()"
snippet @L "Lambda" iA
\Lambda
endsnippet

context "math()"
snippet @e "epsilon" iA
\epsilon
endsnippet

context "math()"
snippet @E "Epsilon" iA
\Epsilon
endsnippet

context "math()"
snippet @d "delta" iA
\delta
endsnippet

context "math()"
snippet @D "Delta" iA
\Delta
endsnippet

context "math()"
snippet @p "phi" iA
\phi
endsnippet

context "math()"
snippet @P "Phi" iA
\Phi
endsnippet

context "math()"
snippet @r "rho" iA
\rho
endsnippet
